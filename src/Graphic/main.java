/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Graphic;

import Graphic.SAD.DesendeMethode;
import Graphic.SAD.GeneticSacADos;
import Graphic.SAD.SacRecuitSimple;
import Graphic.SAD.Sacados;
import Graphic.SAD.Solution;
import Graphic.SAD.Tabou;
import Graphic.SAD.VNS;
import Graphic.tsp.City;
import Graphic.tsp.DicendeMethodeTSP;
import static Graphic.tsp.GA_Calculator.maxGenerations;
import Graphic.tsp.GeneticAlgorithm;
import Graphic.tsp.Population;
import Graphic.tsp.RecuitSimuleTSP;
import Graphic.tsp.Route;
import Graphic.tsp.TSP;
import Graphic.tsp.VNSt;
import Graphic.tsp.tabouTSP;
import java.util.ArrayList;
import javax.swing.ImageIcon;




/**
 *
 * @author errkhis
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    public main() {
        initComponents();
        ImageIcon img=new ImageIcon("/home/errkhis/NetBeansProjects/MainProject/src/Graphic/Abstract_maze_symbols-15-512.png");
        this.setIconImage(img.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        SAD = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        jeu = new javax.swing.JTextField();
        label3 = new java.awt.Label();
        itt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        res = new javax.swing.JTextArea();
        ms = new javax.swing.JLabel();
        label7 = new java.awt.Label();
        button1 = new java.awt.Button();
        max = new javax.swing.JTextField();
        label4 = new java.awt.Label();
        TSP = new javax.swing.JPanel();
        jComboBox3 = new javax.swing.JComboBox<>();
        label9 = new java.awt.Label();
        label10 = new java.awt.Label();
        jeu1 = new javax.swing.JTextField();
        label11 = new java.awt.Label();
        itt1 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        res1 = new javax.swing.JTextArea();
        ms1 = new javax.swing.JLabel();
        label12 = new java.awt.Label();
        button2 = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("metaheuristic");
        setBackground(new java.awt.Color(223, 223, 223));
        setResizable(false);

        SAD.setBackground(new java.awt.Color(1, 1, 1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Récuit simule", "Tabou", "Décente", "Génitique", "VNS", "Glouton" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        label1.setForeground(new java.awt.Color(254, 254, 254));
        label1.setText("nbre d'ittérations");

        label2.setForeground(new java.awt.Color(254, 254, 254));
        label2.setText("Algorithme");

        label3.setForeground(new java.awt.Color(254, 254, 254));
        label3.setText("jeu de donnée de taille");

        res.setColumns(20);
        res.setRows(5);
        jScrollPane1.setViewportView(res);

        ms.setForeground(new java.awt.Color(255, 0, 0));
        ms.setText("MS");

        label7.setForeground(new java.awt.Color(0, 255, 52));
        label7.setText("ERRKHIS / EDDAROUCH");

        button1.setForeground(new java.awt.Color(32, 236, 23));
        button1.setLabel("Valider");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        label4.setForeground(new java.awt.Color(254, 254, 254));
        label4.setText("Max de SAC");

        javax.swing.GroupLayout SADLayout = new javax.swing.GroupLayout(SAD);
        SAD.setLayout(SADLayout);
        SADLayout.setHorizontalGroup(
            SADLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SADLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SADLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SADLayout.createSequentialGroup()
                        .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ms)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SADLayout.createSequentialGroup()
                        .addGap(0, 58, Short.MAX_VALUE)
                        .addGroup(SADLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SADLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane1)
                                .addGroup(SADLayout.createSequentialGroup()
                                    .addGroup(SADLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(label1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(label2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(label3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(label4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(46, 46, 46)
                                    .addGroup(SADLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jComboBox1, 0, 207, Short.MAX_VALUE)
                                        .addComponent(jeu)
                                        .addComponent(itt)
                                        .addComponent(max, javax.swing.GroupLayout.Alignment.TRAILING))))
                            .addComponent(button1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63))))
        );
        SADLayout.setVerticalGroup(
            SADLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SADLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SADLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SADLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(max, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SADLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jeu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SADLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(SADLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ms, javax.swing.GroupLayout.Alignment.TRAILING)))
        );

        jTabbedPane1.addTab("Sac À Dos", SAD);

        TSP.setBackground(new java.awt.Color(1, 1, 1));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Récuit simule", "Tabou", "Décente", "Génitique", "VNS", "Glouton" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        label9.setForeground(new java.awt.Color(254, 254, 254));
        label9.setText("nbre d'ittérations");

        label10.setForeground(new java.awt.Color(254, 254, 254));
        label10.setText("Algorithme");

        label11.setForeground(new java.awt.Color(254, 254, 254));
        label11.setText("jeu de donnée de taille");

        itt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itt1ActionPerformed(evt);
            }
        });

        res1.setColumns(20);
        res1.setRows(5);
        jScrollPane3.setViewportView(res1);

        ms1.setForeground(new java.awt.Color(255, 0, 0));
        ms1.setText("MS");

        label12.setForeground(new java.awt.Color(0, 255, 52));
        label12.setText("ERRKHIS / EDDAROUCH");

        button2.setForeground(new java.awt.Color(32, 236, 23));
        button2.setLabel("Valider");
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TSPLayout = new javax.swing.GroupLayout(TSP);
        TSP.setLayout(TSPLayout);
        TSPLayout.setHorizontalGroup(
            TSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TSPLayout.createSequentialGroup()
                .addContainerGap(68, Short.MAX_VALUE)
                .addGroup(TSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(TSPLayout.createSequentialGroup()
                        .addGroup(TSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(TSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox3, 0, 207, Short.MAX_VALUE)
                            .addComponent(jeu1)
                            .addComponent(itt1)))
                    .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TSPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ms1)
                .addContainerGap())
        );
        TSPLayout.setVerticalGroup(
            TSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TSPLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(TSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jeu1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itt1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TSPLayout.createSequentialGroup()
                        .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 54, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TSPLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(TSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ms1)
                            .addComponent(label12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );

        jTabbedPane1.addTab("TSP", TSP);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        setSize(new java.awt.Dimension(547, 412));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        if("Glouton"==String.valueOf(jComboBox1.getSelectedItem())){
            itt.disable();
        }else{
            itt.enable();
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
        if("Glouton"==String.valueOf(jComboBox3.getSelectedItem())){
            itt1.disable();
        }else{
            itt1.enable();
        }
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        // TODO add your handling code here:
                    if("Décente"==String.valueOf(jComboBox1.getSelectedItem())){
                        long startTime = System.nanoTime();
                        Sacados sac = new Sacados(Integer.parseInt(jeu.getText()),Integer.parseInt(max.getText()));
                        int nbrItir = Integer.parseInt(itt.getText());
                        DesendeMethode d=new DesendeMethode(sac,nbrItir);
                        ArrayList<Integer> solution=d.decent(sac,nbrItir);
                        res.setText("------ knapsack using Descent -----\n");
                        sac.getListe().stream().forEach(v->res.append(String.format("(%d,%d)", v.getValeur(),v.getPoids())));
                        res.append("\n");
                        solution.stream().forEach(v->res.append(v+" "));
                        res.append("\nfct obj:"+d.calucluLoadValue(sac.getListe(),solution));
                        long endTime = System.nanoTime();
                        long timeElapsed = (endTime - startTime)/1000000;
                        ms.setText(String.valueOf(timeElapsed)+"Ms");
                        //System.out.println("\nla valeur totale qu'on peut la porter:"+d.calucluLoadValue(sac.getListe(),solution))
                        }
                    
                    if("Récuit simule"==String.valueOf(jComboBox1.getSelectedItem())){
                            long startTime = System.nanoTime();
                            Sacados sac = new Sacados(Integer.parseInt(jeu.getText()),Integer.parseInt(max.getText()));
                            int nbrItir = Integer.parseInt(itt.getText());
                            SacRecuitSimple s=new SacRecuitSimple(sac,nbrItir);		
                            ArrayList<Integer> solution;
                            solution=s.RecuitSimple(sac,nbrItir);
                            res.setText("------ knapsack using simulated annealing -----\n");
                            sac.getListe().stream().forEach(v->res.append(String.format("(%d,%d)", v.getValeur(),v.getPoids())));
                            res.append("\n");
                            solution.stream().forEach(v->res.append(v+" "));
                            res.append("\nla valeur totale qu'on peut la porter:"+s.calucleLoadValue(sac.getListe(),solution));
                            long endTime = System.nanoTime();
                            long timeElapsed = (endTime - startTime)/1000000;
                            ms.setText(String.valueOf(timeElapsed)+"Ms");
                    }
                    
                    if("Tabou"==String.valueOf(jComboBox1.getSelectedItem())){
                        long startTime = System.nanoTime();
                        Sacados sac = new Sacados(Integer.parseInt(jeu.getText()),Integer.parseInt(max.getText()));
                        int nbrItir = Integer.parseInt(itt.getText());
                        ArrayList<Integer>soln=sac.glouton().getInstance();
                        Tabou T=new Tabou(sac, nbrItir);
                        res.setText("------ knapsack using Taboo -----\n");
                        sac.getListe().stream().forEach(v->res.append(String.format("(%d,%d)", v.getValeur(),v.getPoids())));
                        ArrayList<Integer> solution=T.tabou(soln);
                        res.append("\n");
                        solution.forEach(v->res.append(v+" "));
                        res.append("\nla valeur totale qu'on peut la porter:"+T.calucluLoadValue(sac.getListe(),solution));
                        long endTime = System.nanoTime();
                            long timeElapsed = (endTime - startTime)/1000000;
                            ms.setText(String.valueOf(timeElapsed)+"Ms");
                    }
                    
                    if("VNS"==String.valueOf(jComboBox1.getSelectedItem())){
                            long startTime = System.nanoTime();
                            Sacados sac = new Sacados(Integer.parseInt(jeu.getText()),Integer.parseInt(max.getText()));
                            int nbrItir = Integer.parseInt(itt.getText());
                            VNS v1=new VNS(sac, nbrItir);
                            ArrayList<Integer> l=v1.VNS(sac,nbrItir);
                            res.setText("------ knapsack using VNS -----\n");
                            sac.getListe().stream().forEach(v->res.append(String.format("(%d,%d)", v.getValeur(),v.getPoids())));
                            res.append("\n");
                            l.stream().forEach(v->res.append(v+" "));
                            res.append("\nla valeur totale qu'on peut la porter:"+v1.calucluLoadValue(sac.getListe(),l));
                            long endTime = System.nanoTime();
                            long timeElapsed = (endTime - startTime)/1000000;
                            ms.setText(String.valueOf(timeElapsed)+"Ms");
                    }
                    
                    if("Génitique"==String.valueOf(jComboBox1.getSelectedItem())){
                        long startTime = System.nanoTime();
                        Sacados sac = new Sacados(Integer.parseInt(jeu.getText()),Integer.parseInt(max.getText()));
                        int nbrItir = Integer.parseInt(itt.getText());
                        res.setText("------ knapsack using Genitic -----\n");
                        sac.getListe().stream().forEach(v->res.append(String.format("(%d,%d)", v.getValeur(),v.getPoids())));
                        GeneticSacADos pop=new GeneticSacADos(Integer.parseInt(jeu.getText()), nbrItir, sac.getListe(), Integer.parseInt(max.getText()));
                        ArrayList<Integer> solution= pop.algoGenetique();
                        solution.forEach(v->res.append(v+" "));
                        res.append("\nla valeur totale qu'on peut la porter:"+pop.calucluLoadValue(sac.getListe(),solution));
                        res.append(pop.algoGenetique().toString());
                        long endTime = System.nanoTime();
                        long timeElapsed = (endTime - startTime)/1000000;
                        ms.setText(String.valueOf(timeElapsed)+"Ms");
                    }
                    
                    if("Glouton"==String.valueOf(jComboBox1.getSelectedItem())){
                        long startTime = System.nanoTime();
                        Sacados s = new Sacados(Integer.parseInt(jeu.getText()),Integer.parseInt(max.getText()));
                        Solution mySol=s.glouton();
                        res.setText("------ knapsack using Glouton -----");
                        s.getListe().stream().forEach(v->res.append(String.format("(%d,%d)", v.getValeur(),v.getPoids())));
                        res.append("\n");
                        mySol.getInstance().stream().forEach(v->res.append(v+" "));
                        res.append("\nla valeur totale qu'on peut la porter:"+mySol.getValeur());
                        long endTime = System.nanoTime();
                        long timeElapsed = (endTime - startTime)/1000000;
                        ms.setText(String.valueOf(timeElapsed)+"Ms");
                            }
                    

    }//GEN-LAST:event_button1ActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        // TODO add your handling code here:
        if("Glouton"==String.valueOf(jComboBox3.getSelectedItem())){
                        long startTime = System.nanoTime();
                        TSP tour = new TSP(Integer.parseInt(jeu1.getText()));
                        double[][] v= tour.getViles();
                       // tour.villeMatrixe();
                        res1.setText("-----resolution of TSP using Glouton algo------\n");
                        ArrayList<String> l=tour.setTour();
                        res1.append("le meilleur chemain est:"+l);
                        double c=tour.calculeTour(v, l);
                        //tour.setTour();
                        res1.append("\nle voyageur va passer "+c);
                        long endTime = System.nanoTime();
                        long timeElapsed = (endTime - startTime)/1000000;
                        ms1.setText(String.valueOf(timeElapsed)+"Ms");
        }
        
        if("Décente"==String.valueOf(jComboBox3.getSelectedItem())){
                        long startTime = System.nanoTime();
                        TSP tour=new TSP(Integer.parseInt(jeu1.getText()));
                        int T=Integer.parseInt(itt1.getText());
                        DicendeMethodeTSP tspDM=new DicendeMethodeTSP(tour,T);
                        ArrayList<String> initSol=tour.getInitSoul();
                        ArrayList<String> solution=tspDM.dicende(initSol);
                        res1.setText("-----resolution of TSP using Descent algo------\n");
                        res1.append("le meilleur chemain est:");
                        solution.stream().forEach(v->res1.append(v+" "));
                        res1.append("\nle voyageur va passer "+tspDM.calculeTour(tour.getViles(),tour.getVillesList(), solution));
                        long endTime = System.nanoTime();
                        long timeElapsed = (endTime - startTime)/1000000;
                        ms1.setText(String.valueOf(timeElapsed)+"Ms");
                        //System.out.println("\nla valeur totale qu'on peut la porter:"+d.calucluLoadValue(sac.getListe(),solution))
        }
        
        if("Récuit simule"==String.valueOf(jComboBox3.getSelectedItem())){
                            long startTime = System.nanoTime();
                            TSP tour=new TSP(Integer.parseInt(jeu1.getText()));
                            int T=Integer.parseInt(itt1.getText());
                            RecuitSimuleTSP rec=new RecuitSimuleTSP();
                            ArrayList<String> solution=rec.recuitSimple(tour,T);
                            tour.villeMatrixe();
                            res1.setText("-----resolution of TSP using simulated annealing algo------");
                            res1.append("\nle meilleur chemain est:");
                            solution.stream().forEach(v->res1.append(v+" "));
                            res1.append("\nle voyageur va passer "+rec.calculeTour(tour.getViles(),tour.getVillesList(), solution));
                            long endTime = System.nanoTime();
                            long timeElapsed = (endTime - startTime)/1000000;
                            ms1.setText(String.valueOf(timeElapsed)+"Ms");
                    }
        
        if("VNS"==String.valueOf(jComboBox3.getSelectedItem())){
                        long startTime = System.nanoTime();
                        TSP tour=new TSP(Integer.parseInt(jeu1.getText()));
                        VNSt newTour=new VNSt(tour,Integer.parseInt(itt1.getText()));
                        ArrayList<String> solution=newTour.vns(tour.setTour());
                        tour.villeMatrixe();
                        res1.setText("-----resolution of TSP using VNS algo------");
                        res1.append("\nle meilleur chemain est:");
                        solution.stream().forEach(v->res1.append(v+" "));
		
                        res1.append("\nle voyageur va passer "+newTour.calculeTour(tour.getViles(),tour.getVillesList(), solution));
                        long endTime = System.nanoTime();
                        long timeElapsed = (endTime - startTime)/1000000;
                        ms1.setText(String.valueOf(timeElapsed)+"Ms");
                    }
        
        if("Tabou"==String.valueOf(jComboBox3.getSelectedItem())){
                        long startTime = System.nanoTime();
                        TSP tour=new TSP(Integer.parseInt(jeu1.getText()));
                        tabouTSP newTour=new tabouTSP(tour,Integer.parseInt(itt1.getText()));
                        ArrayList<String> solution=newTour.tabou(tour.setTour());
                        tour.villeMatrixe();
                        res1.setText("-----resolution of TSP using Taboo algo------");
                        res1.append("\nle meilleur chemain est:");
                        solution.stream().forEach(v->res1.append(v+" "));

                        res1.append("\nle voyageur va passer "+newTour.calculeTour(tour.getViles(),tour.getVillesList(), solution));
                        long endTime = System.nanoTime();
                            long timeElapsed = (endTime - startTime)/1000000;
                            ms1.setText(String.valueOf(timeElapsed)+"Ms");
                    }
        
        if("Génitique"==String.valueOf(jComboBox3.getSelectedItem())){
            res1.setText("-----resolution of TSP using Genitic algo------\n");
                        long startTime = System.nanoTime();
                        // Create cities
		int numCities = Integer.parseInt(jeu1.getText());
		City cities[] = new City[numCities];
		
		// Loop to create random cities
		for (int cityIndex = 0; cityIndex < numCities; cityIndex++) {
			// Generate x,y position
			int xPos = (int) (100 * Math.random());
			int yPos = (int) (100 * Math.random());
			
			// Add city
			cities[cityIndex] = new City(xPos, yPos);
		}

		// Initial GA
		GeneticAlgorithm ga = new GeneticAlgorithm(100, 0.001, 0.9, 2, 5);

		// Initialize population
		Population population = ga.initPopulation(cities.length);

		// Evaluate population
		ga.evalPopulation(population, cities);

		Route startRoute = new Route(population.getFittest(0), cities);
		res1.append("initialisation de distance: " + startRoute.getDistance()+"\n");

		// Keep track of current generation
		int generation = 1;
		// Start evolution loop
		while (ga.isTerminationConditionMet(generation, Integer.parseInt(itt1.getText())) == false) {
			// Print fittest individual from population
			Route route = new Route(population.getFittest(0), cities);
			res1.append("Génération 1 :"+generation+" meilleur solution : " + route.getDistance()+"\n");

			// Apply crossover
			population = ga.crossoverPopulation(population);

			// Apply mutation
			population = ga.mutatePopulation(population);

			// Evaluate population
			ga.evalPopulation(population, cities);

			// Increment the current generation
			generation++;
		}
                        Route route = new Route(population.getFittest(0), cities);
                        res1.append("meuilleur Solution: " + route.getDistance()+"\n");

                        long endTime = System.nanoTime();
                        long timeElapsed = (endTime - startTime)/1000000;
                        ms1.setText(String.valueOf(timeElapsed)+"Ms");
                    }
    }//GEN-LAST:event_button2ActionPerformed

    private void itt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itt1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel SAD;
    private javax.swing.JPanel TSP;
    private java.awt.Button button1;
    private java.awt.Button button2;
    private javax.swing.JTextField itt;
    private javax.swing.JTextField itt1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jeu;
    private javax.swing.JTextField jeu1;
    private java.awt.Label label1;
    private java.awt.Label label10;
    private java.awt.Label label11;
    private java.awt.Label label12;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label7;
    private java.awt.Label label9;
    private javax.swing.JTextField max;
    private javax.swing.JLabel ms;
    private javax.swing.JLabel ms1;
    private javax.swing.JTextArea res;
    private javax.swing.JTextArea res1;
    // End of variables declaration//GEN-END:variables
}
